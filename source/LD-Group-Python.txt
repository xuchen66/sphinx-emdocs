#!Python
#ScriptName LD-Group-Python
import serialem
from math import sqrt

### Functions
def CycleTargetDefocus(defLow, defHigh, step):
    print(' ---> running CycleTargetDefocus ...')
    print(' --- defLow, defHigh, step = ', defLow, defHigh, step, '---')
    serialem.SuppressReports()
    tarFocus = serialem.ReportTargetDefocus()   # float
    if tarFocus > defLow or tarFocus < defHigh:
        serialem.SetTargetDefocus()
    else:
        serialem.IncTargetDefocus(-step)
        serialem.ChangeFocus(-step)
    serialem.ReportTargetDefocus()

def Drift(crit):
    print(' ---> Running Drift ', crit, 'A ...')
    interval = 4
    times = 10
    period = interval + 1
    #
    serialem.Focus()
    serialem.Delay(interval)
    for index in range(1, times+1):
        serialem.Focus()
        serialem.AlignTo('B', 0, 1)
        aliShift = serialem.ReportAlignShift()
        dx, dy = aliShift[2], aliShift[3]
        rate = sqrt(dx*dx + dy*dy)/period*10
        print(' Rate =', rate, 'A/sec')
        if rate < crit:
            print('Drift is low enough after shot ', index)
            break
        elif index < times:
            serialem.Delay(interval)
        else:
            print('Drift never got below ', crit, 'skipping...')
            serialem.Exit()

### main
# when to do focus and center beam, set range
groupOption = 1         # 1 = only group head, 0 = every item
defLow = -1.0
defHigh = -2.5
step = 1.0

# drift control, limit 
driftControl = 1        # 1 = yes, 0 = no 
limit = 3.0

# for X,Y position
templateOption = 1      # 1 = use fixed ref, 0 = dynamic one (whole image)
refBuffer = 'P'

#### no editing below ####
serialem.RealignToNavItem(0)
serialem.ResetImageShift(2)
if templateOption == 1:
    print(' --- assuming a template image in buffer', refBuffer, '---')
elif templateOption == 0:
    serialem.Copy('A', refBuffer)
else:
    print('templateOption needs to be 0 or 1, please fix it and continue')
    serialem.exit()
serialem.AcquireToMatchBuffer(refBuffer)
serialem.AlignTo(refBuffer, 0, 1)

# turn on Autofocus drift protection so it reports drift rate
DP = serialem.ReportUserSetting('DriftProtection')    # float
if DP == 0.:
    serialem.SetUserSetting('DriftProtection', 1)

# center beam and defosuc
gs = serialem.ReportGroupStatus()      # tuple
gs = gs[0]                             # now a float
if groupOption == 0:
    serialem.AutoCenterBeam()
    CycleTargetDefocus(defLow, defHigh, step)
    serialem.Autofocus()
else:
    if gs == 1. or gs == 0.:
        serialem.AutoCenterBeam()
        CycleTargetDefocus(defLow, defHigh, step)
        serialem.AutoCenterBeam()
    else:
        print('   group member, skip focusing ...')

# drift 
if driftControl == 1:
    FD = serialem.ReportFocusDrift()
    if FD > 0.09:
        Drift(limit)

# shot
serialem.AdjustBeamTiltforIS()      # keep this line 
serialem.MultipleRecords()
#serialem.Record()

# post-expose
serialem.RefineZLP(30)              # if GIF exists 

